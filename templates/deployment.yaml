apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-api
  namespace: {{ .Release.Namespace }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: spring-boot-api
  template:
    metadata:
      labels:
        app: spring-boot-api
    spec:
      containers:
        - name: spring-boot-api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c"]
          args:
            - echo "Starting Spring Boot with profile --spring.profiles.active={{ .Values.env }}" && sleep 3600
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            {{- range .Values.ports }}
            - containerPort: {{ .containerPort }}
              name: {{ .name }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources: {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/config.json
              subPath: config.json
      terminationGracePeriodSeconds: 10
      preStop:
        exec:
          command: ["wget", "http://localhost:8080/service/shutdown"]
      volumes:
        - name: config-volume
          configMap:
            name: config-json

